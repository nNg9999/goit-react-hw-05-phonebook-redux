{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Timer/Timer.module.css","components/ContactList/ContactList.module.scss","components/Layout/Layout.module.scss","components/Button/Button.module.css","components/Section/Section.module.scss","components/Filter/Filter.module.scss","modules/timer/timerActions.js","modules/timer/timerReducer.js","modules/contacts/contactsActions.js","modules/contacts/contactsReducer.js","modules/theme/themeActions.js","modules/theme/themeReducer.js","modules/counter/counterAction.js","modules/rootModule.js","modules/counter/counterReducer.js","modules/store.js","modules/counter/counterSelectors.js","modules/contacts/contactsSelectors.js","components/Layout/Layout.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactFormContainer.js","components/ContactListItem/ContactListItem.jsx","components/ContactListItem/ContactListItem.Container.js","components/ContactList/ContactList.jsx","components/ContactList/index.js","components/Filter/Filter.jsx","components/Filter/index.js","components/ThemeToggler/ThemeToggler.js","components/Timer/Timer.jsx","components/Button/index.js","components/StepSelector/StepSelector.jsx","redux/timer/timerActions.js","redux/timer/timerTypes.js","hoc/Toggler.js","components/App.jsx","components/AppContainer.js","index.js"],"names":["module","exports","increment","createAction","decrement","changeStep","valueReducer","createReducer","timerActions","state","action","payload","stepReducer","step","combineReducers","value","addContacts","name","number","contacts","id","uuidv4","removeContact","changeFilter","items","contactsActions","length","toast","error","filter","toggleTheme","theme","isChecked","themeConfig","themeActions","rootModule","timer","timerReducer","contactsReducer","themeReducer","counter","counterAction","store","configureStore","reducer","getItems","getFilter","getVC","createSelector","toLowerCase","includes","getItemById","contactId","find","item","getVisibleContacts","connect","props","children","className","styles","container","dark","light","Section","title","section","ContactForm","handleChange","e","target","setState","handleSubmit","preventDefault","onAddContact","this","form","onSubmit","type","input","onChange","button","Component","defaulProps","mapDispatchToProps","contactsSelectors","ContactListItem","onRemove","onClick","defaultProps","ownProps","dispatch","ContactList","contactList","map","key","Filter","onChangeFilter","ThemeToggler","onToggleTheme","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","fill","d","checked","htmlFor","mapDispatchToprops","onIncrement","onDecrement","css","button_dark","button_light","label","onToggle","isOpen","display","textAlign","select","width","font","onChangeStep","Number","options","style","event","option","Toggler","toggle","stepOptions","App","visibleContacts","counterValue","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","AppContainer","counterSelectors","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27f97587.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1DS5n\",\"input\":\"ContactForm_input__3sNEc\",\"button\":\"ContactForm_button__20TLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Timer_container__QGHEz\",\"value\":\"Timer_value__c5CNr\",\"actions\":\"Timer_actions__2nNZ9\",\"button\":\"Timer_button__12kNr\",\"button_dark\":\"Timer_button_dark__3tHYY\",\"button_ligth\":\"Timer_button_ligth__NIfZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1v-fj\",\"button\":\"ContactList_button__8e7kW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__213tc\",\"light\":\"Layout_light__2hT6y\",\"dark\":\"Layout_dark__3mnXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"Button_light__3SnLs\",\"btn_light\":\"Button_btn_light__1VAGD\",\"btn_dark\":\"Button_btn_dark__3i3KY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__cBh18\",\"title\":\"Section_title__2Ul_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2H0G9\",\"input\":\"Filter_input__3fIla\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst increment = createAction('timer/increment');\nconst decrement = createAction('timer/decrement');\nconst changeStep = createAction('timer/changeStep');\n\n\n// import { INCREMENT, DECREMENT, CHANGE_STEP } from './timerTypes';\n\n// const increment = value => {\n//   return {\n//     type: INCREMENT,\n//     payload: {\n//       value,\n//     },\n//   };\n// };\n\n// const decrement = value => {\n//   return {\n//     type: DECREMENT,\n//     payload: {\n//       value,\n//     },\n//   };\n// };\n\n// const changeStep = step => {\n//   return {\n//     type: CHANGE_STEP,\n//     payload: {\n//       step: Number(step),\n//     },\n//   };\n// };\n\nexport default { increment, decrement, changeStep };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport timerActions from './timerActions';\n\n\n\nconst valueReducer = createReducer(0, {\n  [timerActions.increment]: (state, action) => state + action.payload,\n  [timerActions.decrement]: (state, action) => state - action.payload < 0 ? state : state - action.payload,\n});\n\nconst stepReducer = createReducer(5, {\n  [timerActions.changeStep]: (state, action) => { return action.payload.step },\n});\n\n\n// import { combineReducers } from 'redux';\n// import { INCREMENT, DECREMENT, CHANGE_STEP } from './timerTypes';\n\n// // const increment = (state, value) => { state + value };\n\n// const valueReducer = (state = 0, { type, payload }) => {\n//   switch (type) {\n//     case INCREMENT:\n//       // return increment(state, payload.value);\n//       return state + payload.value;\n\n//     case DECREMENT:\n//       return state - payload.value < 0 ? state : state - payload.value;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const stepReducer = (state = 5, { type, payload }) => {\n//   switch (type) {\n//     case CHANGE_STEP:\n//       return payload.step;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  value: valueReducer,\n  step: stepReducer,\n});\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst addContacts = createAction('contacts/add', (name, number) => ({\n  payload: {\n    contacts: {\n      name,\n      number,\n      id: uuidv4(),\n    },\n  },\n}));\n\n// const addContacts = (name, number) => ({\n//   type: contactsType.ADD,\n// payload: {\n//   contacts: {\n//     name,\n//     number,\n//     id: uuidv4(),\n//   },\n// },\n// });\n\n\nconst removeContact = createAction('contacts/remove');\n\n// const removeContact = (contactId) => ({\n//   type: contactsType.REMOVE,\n//   payload: {\n//     contactId,\n//   },\n// });\n\n\n\nconst changeFilter = createAction('contacts/changeFilter');\n\n// const changeFilter = filter => ({\n//   type: contactsType.CHANGE_FILTER,\n//   payload: {\n//     filter,\n//   },\n// });\n\n\nexport default {\n  addContacts,\n  removeContact,\n  changeFilter,\n}","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport contactsActions from './contactsActions';\n\nimport { toast } from 'react-toastify';\n//styles\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst initialContacts = [\n  // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n]\n\n\nconst addContacts = (state, action) => {\n  const { name, number } = action.payload.contacts;\n\n  if (!name || !number) { toast.error('Please fill the form!') }\n  else if (name.length < 3) { toast.error('Name should be more then 3 letters') }\n  // else if (state.items.some(contact => contact.name === name)) { toast.info(name + ` is alredy in contacts`) }\n  else { return [...state, action.payload.contacts] }\n};\n\nconst removeContact = (state, action) => { return state.filter(({ id }) => id !== action.payload) };\n\n\nconst items = createReducer(initialContacts, {\n  [contactsActions.addContacts]: addContacts,\n  [contactsActions.removeContact]: removeContact,\n})\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (state, action) => action.payload,\n})\n\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case contactsActions.changeFilter.type:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n})\n\n\n\n// addContacts = (name, number) => {\n//   const { contacts } = this.state\n//   const newContact = { name, number, id: uuidv4(), }\n\n//   if (!name || !number) { return toast.error('Please fill the form!') }\n//   else if (name.length < 3) { toast.error('Name should be more then 3 letters') }\n//   else if (contacts.some(contact => contact.name === name)) { toast.info(name + ` is alredy in contacts`) }\n//   else { this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] })) }\n// };\n\n\n","import { createAction } from '@reduxjs/toolkit';\n\nconst toggleTheme = createAction('theme/toggleTheme', (theme, isChecked) => ({\n  payload:\n  {\n    isChecked: false,\n    themeConfig: 'light',\n  }\n\n}));\n\nexport default {\n  toggleTheme,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport themeActions from './themeActions';\n\nconst toggleTheme = (state, action) => {\n  return {\n    ...state,\n    themeConfig: state.themeConfig === 'ligth' ? 'dark' : 'ligth',\n    isChecked: !state.isChecked,\n  }\n}\n\nconst theme = createReducer({ themeConfig: \"light\", isChecked: false }, {\n  [themeActions.toggleTheme]: toggleTheme,\n})\n\nexport default combineReducers({\n  theme,\n});\n","import { createAction } from '@reduxjs/toolkit';\n\nconst increment = createAction('counter/increment');\n\nexport default {\n  increment,\n}","import timerReducer from './timer/timerReducer';\nimport contactsReducer from './contacts/contactsReducer';\nimport themeReducer from './theme/themeReducer';\nimport counterReducer from './counter/counterReducer';\n\nconst rootModule = {\n  timer: timerReducer,\n  contacts: contactsReducer,\n  theme: themeReducer,\n  counter: counterReducer,\n};\n\nexport default rootModule;","import { createReducer } from \"@reduxjs/toolkit\";\nimport counterAction from \"./counterAction\";\n\nconst counterReducer = createReducer(0, {\n  [counterAction.increment]: (state) => state + 1,\n})\n\nexport default counterReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootModule from './rootModule';\n\n// import timerReducer from './timer/timerReducer';\n// import contactsReducer from './contacts/contactsReducer'\n\n\nconst store = configureStore({\n  reducer: rootModule,\n});\n\nexport default store;\n","const getValue = state => state.counter;\n\nexport default {\n  getValue,\n}","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nconst getItems = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = state => {\n  const items = getItems(state);\n  const filter = getFilter(state).toLowerCase();\n\n  return items.filter(({ name }) => name.toLowerCase().includes(filter));\n}\n\n\nconst getVC = createSelector([getItems, getFilter], (items, filter) => {\n  return items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n})\n\n\nconst getItemById = createSelector(\n  [(state, contactId) => contactId, getItems],\n  (contactId, items) => items.find(item => item.id === contactId));\n\n// const getItemById = (state, contactId) => {\n//   const items = getItems(state);\n//   return items.find(item => item.id === contactId);\n// }\n\n\nexport default {\n  getItems,\n  getVisibleContacts,\n  getVC,\n  getItemById,\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// context\n// import withThemeContext from '../../hoc/withThemeContext';\nimport { connect } from \"react-redux\";\n// styles\nimport styles from \"./Layout.module.scss\";\n\nfunction Layout(props) {\n  const { children, isChecked } = props;\n\n  return (\n    <div\n      className={`${styles.container} ${\n        isChecked ? styles.dark : styles.light\n        }`}\n    >\n      {children}\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.node,\n  isChecked: PropTypes.bool.isRequired\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    isChecked: state.theme.theme.isChecked,\n    theme: state.theme.theme.themeConfig,\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","import React from \"react\";\nimport { string, node } from \"prop-types\";\n\nimport styles from \"./Section.module.scss\";\n\nfunction Section({ title, children }) {\n\n  return (\n    <section className={styles.section} >\n      {title && <h1 className={styles.title}>{title}</h1>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: string.isRequired,\n  children: node,\n};\n\nexport default Section;","import React, { Component } from 'react';\nimport { func } from 'prop-types';\n\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n\n  static propTypes = {\n    onAddContact: func.isRequired,\n  };\n  static defaulProps = {};\n\n  state = {\n    name: '',\n    number: '',\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  }\n\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.name}>Name\n          <input type=\"text\" name=\"name\" className={styles.input} value={name} onChange={this.handleChange} />\n        </label>\n        <label className={styles.name}>Namber\n          <input type=\"text\" name=\"number\" className={styles.input} value={number} onChange={this.handleChange} />\n        </label>\n        <button type=\"submit\" className={styles.button} >Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\n\n","//redux\nimport { connect } from \"react-redux\";\n\nimport ContactForm from \"./ContactForm\";\n\nimport contactsActions from \"../../modules/contacts/contactsActions\";\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\n\n\n// const ContactFormContainer = (props) => {\n//   return (\n//     <ContactForm {...props} />\n//   )\n// }\n\nconst mapState = (state) => {\n  const contacts = contactsSelectors.getItems(state);\n  return { ...contacts }\n}\n\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.addContacts,\n}\n\nexport default connect(mapState, mapDispatchToProps)(ContactForm);\n\n","import React from 'react';\n// import { string, arrayOf, exact, func } from 'prop-types';\n\n\n// styles\nimport styles from '../ContactList/ContactList.module.scss';\n\nconst ContactListItem = ({ name, number, onRemove }) => {\n  return (\n\n    <li> {name}: {number}\n      <section >\n        <button type=\"submit\" className={styles.button} onClick={onRemove}>Delete</button>\n      </section>\n    </li>\n\n  )\n};\n\nContactListItem.defaultProps = {};\n\n// ContactListItem.propTypes = {\n//   contacts: arrayOf(exact({\n//     id: string.isRequired,\n//     name: string.isRequired,\n//     number: string.isRequired,\n//   })).isRequired,\n//   onRemove: func.isRequired,\n// };\n\n// const mapStateToProps = (state, ownProps) => {\n//   // console.log(state);\n//   // console.log(ownProps);\n\n//   // const item = state.contacts.items.find(item => item.id === ownProps.id)\n//   const item = contactsSelectors.getItems(state).find(item => item.id === ownProps.id)\n//   // console.log(item);\n\n//   return { ...item }\n// };\n\n\n// const mapState = (state, ownProps) => {\n//   const contacts = contactsSelectors.getItemById(state, ownProps.id);\n//   return { ...contacts }\n// }\n\n// const mapDispatchToProps = (dispatch, ownProps) => ({\n//   onRemove: () => dispatch(contactsActions.removeContact(ownProps.id)),\n// })\n\n// export default connect(mapState, mapDispatchToProps)(ContactListItem);\nexport default ContactListItem;","// redux\nimport { connect } from \"react-redux\";\n\nimport ContactListItem from \"./ContactListItem\";\n\n// import contactsActions from \"../../redux/contacts/contactsActions\";\nimport contactsActions from \"../../modules/contacts/contactsActions\";\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\n\n\nconst mapState = (state, ownProps) => {\n  const contacts = contactsSelectors.getItemById(state, ownProps.id);\n  return { ...contacts }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemove: () => dispatch(contactsActions.removeContact(ownProps.id)),\n})\n\nexport default connect(mapState, mapDispatchToProps)(ContactListItem);\n","import React from 'react';\nimport { string, arrayOf, exact } from 'prop-types';\n\n\nimport ContactListItem from \"../ContactListItem/ContactListItem.Container\";\n// redux\nimport { connect } from \"react-redux\";\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\n// import contactsActions from \"../../redux/contacts/contactsActions\";\n// import contactsActions from \"../../modules/contacts/contactsActions\";\n\n// styles\nimport styles from '../ContactList/ContactList.module.scss';\n\nconst ContactList = ({ contacts }) => {\n  // console.log('ContactList re-render');\n\n  return (\n    <ul className={styles.contactList}>\n\n      {contacts.map(({ id }) =>\n        <ContactListItem key={id} id={id} />\n      )}\n\n    </ul>\n  )\n};\n\nContactList.defaultProps = {};\n\nContactList.propTypes = {\n  contacts: arrayOf(exact({\n    id: string.isRequired,\n    name: string.isRequired,\n    number: string.isRequired,\n  })).isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVC(state),\n})\n// {\n//   const { items, filter } = state.contacts;\n//   const normalizedFilter = filter.toLowerCase();\n//   const visibleContacts = items.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n//   return {\n//     contacts: visibleContacts,\n//   };\n// };\n\n\n\nexport default connect(mapStateToProps)(ContactList);\n","import ContactList from './ContactList';\n\nexport default ContactList;","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport { connect } from \"react-redux\";\n// import contactsActions from \"../../redux/contacts/contactsActions\";\nimport contactsActions from \"../../modules/contacts/contactsActions\";\n\nimport styles from '../Filter/Filter.module.scss';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <label className={styles.filter} >Find contacts by name\n    <input\n      type=\"text\"\n      name=\"filter\"\n      className={styles.input}\n      value={value}\n      onChange={(e) => onChangeFilter(e.target.value)} />\n  </label>\n)\n\nFilter.defaultProps = {};\n\nFilter.propTypes = {\n  value: string.isRequired,\n  onChangeFilter: func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Filter from './Filter';\n\nexport default Filter;","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n\nimport { connect } from 'react-redux';\nimport themeActions from '../../modules/theme/themeActions';\n// context\n// import withThemeContext from '../../hoc/withThemeContext';\n\n// styles\nimport \"./ThemeToggler.scss\";\n\n\nclass ThemeToggler extends Component {\n  // static propTypes = {\n  //   // theme: PropTypes.shape({\n  //     // type: PropTypes.string.isRequired,\n  //     // isChecked: PropTypes.bool.isRequired,\n  //     // toggleTheme: PropTypes.func.isRequired,\n  //   }),\n  // };\n\n\n  render() {\n    const { isChecked, onToggleTheme } = this.props;\n\n    return (\n\n      <div className=\"toolbar\">\n\n        <div className=\"theme-switch\">\n          <svg\n            aria-hidden=\"true\"\n            data-prefix=\"fas\"\n            data-icon=\"sun\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\"\n            className=\"theme-switch__icon\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\n            ></path>\n          </svg>\n\n          <div className=\"switch\">\n            <input\n              className=\"switch__input js-switch-input\"\n              type=\"checkbox\"\n              name=\"theme\"\n              id=\"theme-switch-control\"\n              checked={isChecked}\n              onChange={onToggleTheme}\n\n            />\n            <label\n              aria-hidden=\"true\"\n              className=\"switch__label\"\n              htmlFor=\"theme-switch-control\"\n            >On</label >\n            <div aria-hidden=\"true\" className=\"switch__marker\"></div>\n          </div>\n\n          <svg\n            aria-hidden=\"true\"\n            data-prefix=\"fas\"\n            data-icon=\"moon\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\"\n            className=\"theme-switch__icon\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\n            ></path>\n          </svg>\n        </div>\n      </div>\n    );\n  };\n}\n\n// const mapStateToProps = state => {\n\n//   return {\n//     // isChecked: state.theme.isChecked,\n//     // themeConfig: state.theme.themeConfig,\n//   };\n// };\n\nconst mapDispatchToprops = {\n  onToggleTheme: themeActions.toggleTheme,\n  // onToggleChecked: themeActions.toggleTheme,\n};\n\n// const mapDispatchToprops = dispatch => {\n//   return {\n//     onToggleTheme: isChecked => dispatch(themeActions.toggleTheme(isChecked)),\n\n//   };\n// };\n\nexport default connect(null, mapDispatchToprops)(ThemeToggler);","import React from 'react';\nimport { connect } from 'react-redux';\n// import timerActions from '../../redux/timer/timerActions';\nimport timerActions from '../../modules/timer/timerActions';\n// import * as timerActions from './redux/timerActions';\n\nimport css from './Timer.module.css';\n\n\nconst Timer = ({ value, step, onIncrement, onDecrement, isChecked }) => {\n  const button = `${css.button} ${\n    isChecked ? css.button_dark : css.button_light\n    }`\n\n\n  return (\n    <div className={css.container}>\n      <button\n        type=\"button\"\n        className={button}\n        onClick={() => onDecrement(step)}\n      >\n        &#8722;\n    </button>\n\n      <div className={css.value}>{value} minutes</div>\n\n      <button\n        type=\"button\"\n        className={button}\n        onClick={() => onIncrement(step)}\n      >\n        &#43;\n    </button>\n    </div>\n  )\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    value: state.timer.value,\n    step: state.timer.step,\n    isChecked: state.theme.theme.isChecked,\n  };\n};\n\n// const mapDispatchToprops = dispatch => {\n//   return {\n//     onIncrement: value => dispatch(timerActions.increment(value)),\n//     onDecrement: value => dispatch(timerActions.decrement(value)),\n//   };\n// };\n\n// как обьект с картой\n\nconst mapDispatchToprops = {\n  onIncrement: timerActions.increment,\n  onDecrement: timerActions.decrement,\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Timer);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport themeActions from \"../../modules/theme/themeActions\";\n\nimport css from './Button.module.css'\n\n\nconst Button = ({ label, isChecked, onToggle, isOpen }) => {\n  const button = `${css.button} ${\n    isChecked ? css.button_dark : css.button_light\n    }`\n\n  //theme === 'light' ? 'btn-light' : 'btn-dark'\n  return (\n    <button\n      className={button}\n      // type=\"button\"\n      onClick={onToggle}\n    >\n      {isOpen ? `Hide${label}` : `Show${label}`}\n    </button>\n\n    // <button type=\"button\" onClick={onToggle}>\n    //   {isOpen ? 'HideTimer' : 'ShowTimer'}\n    // </button>\n\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isChecked: themeActions.toggleTheme,\n})\n\nexport default connect(mapStateToProps)(Button);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport timerActions from '../../redux/timer/timerActions';\n\nconst styles = {\n  label: { display: 'block', textAlign: 'center' },\n  select: { width: 80, font: 'inherit' },\n};\n\nconst StepSelector = ({ options, step, onChangeStep }) => (\n  <label style={styles.label}>\n    Select step:\n    <select\n      style={styles.select}\n      value={step}\n      onChange={event => onChangeStep(event.target.value)}\n    >\n      {options.map(option => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  </label>\n);\n\nconst mapStateToProps = state => {\n  return {\n    step: state.timer.step,\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeStep: timerActions.changeStep,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepSelector);\n","import { INCREMENT, DECREMENT, CHANGE_STEP } from './timerTypes';\n\nconst increment = value => {\n  return {\n    type: INCREMENT,\n    payload: {\n      value,\n    },\n  };\n};\n\nconst decrement = value => {\n  return {\n    type: DECREMENT,\n    payload: {\n      value,\n    },\n  };\n};\n\nconst changeStep = step => {\n  return {\n    type: CHANGE_STEP,\n    payload: {\n      step: Number(step),\n    },\n  };\n};\n\nexport default { increment, decrement, changeStep };\n","export const INCREMENT = 'timer/increment';\nexport const DECREMENT = 'timer/decrement';\nexport const CHANGE_STEP = 'timer/changeStep';\n","import { Component } from 'react';\n\nclass Toggler extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => this.setState(state => ({ isOpen: !state.isOpen }));\n\n  render() {\n    return this.props.children({\n      isOpen: this.state.isOpen,\n      onToggle: this.toggle,\n    });\n  }\n}\n\nexport default Toggler;","// Core\nimport React from 'react';\n\n// Components\nimport Layout from './Layout';\nimport Section from './Section';\nimport ContactForm from './ContactForm/ContactFormContainer';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport ThemeToggler from './ThemeToggler';\nimport Timer from './Timer';\nimport Button from './Button';\nimport StepSelector from './StepSelector';\n\n// utils\n// import storage from '../utils/storage';\nimport { ToastContainer } from 'react-toastify';\nimport Toggler from \"../hoc/Toggler\";\n\n//styles\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst stepOptions = [5, 10, 15, 20, 25, 30];\n\n\nconst App = ({ contacts, visibleContacts, onIncrement, counterValue }) => {\n\n  return (\n    <Layout  >\n      <ThemeToggler />\n      <Section title={\"Phonebook\"}>\n        <ContactForm />\n      </Section>\n      <Section title={\"Contacts\"}>\n        {contacts.length > 1 && <Filter />}\n        {contacts.length > 0 && < ContactList />}\n        {!visibleContacts.length && <div>Not faund</div>}\n      </Section>\n      <Toggler>\n        {({ isOpen, onToggle }) => (\n          <>\n            <Button label={\"Timer\"} onToggle={onToggle} isOpen={isOpen} />\n            {isOpen && (\n              <>\n                <Section title={\"Timer\"}>\n                  <Timer />\n                  <StepSelector options={stepOptions} />\n                </Section>\n                <Section title={\"Counter\"}>\n                  <button type=\"button\" onClick={() => onIncrement()}>Counter value : {counterValue} </button>\n                </Section>\n              </>\n            )}\n          </>\n        )}\n      </Toggler>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Layout >\n  );\n}\n\n\nexport default App;\n\n","import React, { Component } from 'react'\n\nimport { connect } from \"react-redux\";\nimport counterSelectors from \"../modules/counter/counterSelectors\";\nimport counterAction from \"../modules/counter/counterAction\";\nimport contactsSelectors from \"../modules/contacts/contactsSelectors\";\n\n\nimport App from \"./App\";\n\nclass AppContainer extends Component {\n\n  render() {\n    return (\n      <App {...this.props} {...this.state} >\n        {this.props.children}\n      </App>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  counterValue: counterSelectors.getValue(state),\n  contacts: contactsSelectors.getItems(state),\n  visibleContacts: contactsSelectors.getVC(state),\n})\n\nconst mapDispatchToprops = {\n  onIncrement: counterAction.increment,\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(AppContainer);\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import store from './redux/store';\nimport store from './modules/store';\n\nimport './sass/base.scss';\n\nimport App from './components/AppContainer';\n\n// console.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}