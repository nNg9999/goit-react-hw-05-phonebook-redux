{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/common/Layout/Layout.module.scss","components/common/Section/Section.module.scss","components/Filter/Filter.module.scss","modules/contacts/contactsActions.js","modules/contacts/contactsReducer.js","modules/theme/themeActions.js","modules/theme/themeReducer.js","modules/rootModule.js","modules/store.js","utils/storage.js","modules/contacts/contactsSelectors.js","modules/theme/themeSelector.js","components/common/Layout/Layout.jsx","components/common/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactFormContainer.js","components/ContactListItem/ContactListItem.jsx","components/ContactListItem/ContactListItem.Container.js","components/ContactList/ContactList.jsx","components/ContactList/index.js","components/Filter/Filter.jsx","components/Filter/index.js","components/ThemeToggler/ThemeToggler.js","components/App.jsx","components/AppContainer.js","index.js","components/ThemeToggler/ThemeToggler.module.css"],"names":["module","exports","addContacts","createAction","name","number","payload","contacts","id","uuidv4","removeContact","changeFilter","items","createReducer","contactsActions","state","action","filter","combineReducers","toggleTheme","theme","isChecked","themeConfig","themeActions","rootModule","contactsReducer","store","configureStore","reducer","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","getItems","getFilter","getVC","createSelector","toLowerCase","includes","getItemById","contactId","find","item","getVisibleContacts","connect","themeSelector","props","children","className","styles","container","dark","light","Section","title","section","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","toast","error","length","some","contact","info","onAddContact","this","form","onSubmit","type","input","onChange","button","Component","defaulProps","contactsSelectors","mapDispatchToProps","ContactListItem","onRemove","onClick","defaultProps","ownProps","dispatch","ContactList","contactList","map","key","Filter","onChangeFilter","ThemeToggler","onToggleTheme","toolbar","themeSwitch","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","themeSwitch__icon","fill","d","switch","switch__input","checked","switch__label","htmlFor","switch__marker","mapDispatchToprops","App","visibleContacts","onIncrement","counterValue","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","AppContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1aa628ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1DS5n\",\"input\":\"ContactForm_input__3sNEc\",\"button\":\"ContactForm_button__20TLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1v-fj\",\"button\":\"ContactList_button__8e7kW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__6gW7d\",\"light\":\"Layout_light__1pSxh\",\"dark\":\"Layout_dark__ty_To\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2LCCr\",\"title\":\"Section_title__dBhIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2H0G9\",\"input\":\"Filter_input__3fIla\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContacts = createAction('contacts/add', (name, number) => ({\n  payload: {\n    contacts: {\n      name,\n      number,\n      id: uuidv4(),\n    },\n  },\n}));\n\nconst removeContact = createAction('contacts/remove');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n  addContacts,\n  removeContact,\n  changeFilter,\n}","import { combineReducers, createReducer } from '@reduxjs/toolkit';\n\nimport contactsActions from './contactsActions';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n]\n\nconst addContacts = (state, action) => {\n  return [...state, action.payload.contacts]\n};\n\nconst removeContact = (state, action) => { return state.filter(({ id }) => id !== action.payload) };\n\n\nconst items = createReducer(initialContacts, {\n  [contactsActions.addContacts]: addContacts,\n  [contactsActions.removeContact]: removeContact,\n})\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (state, action) => action.payload,\n})\n\nexport default combineReducers({\n  items,\n  filter,\n})\n\n\n\n","import { createAction } from '@reduxjs/toolkit';\n\nconst toggleTheme = createAction('theme/toggleTheme', (theme, isChecked) => ({\n  payload: {\n    theme: {\n      isChecked: false,\n      themeConfig: 'light',\n    }\n  }\n}));\n\nexport default {\n  toggleTheme,\n};\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\n\nimport themeActions from './themeActions';\n\nconst toggleTheme = (state) => {\n  return {\n    ...state,\n    themeConfig: state.themeConfig === 'ligth' ? 'dark' : 'ligth',\n  }\n}\n\nconst toggleChecked = (state) => {\n  return {\n    ...state,\n    isChecked: !state.isChecked,\n  }\n}\n\nconst themeConfig = createReducer({ themeConfig: \"ligth\" }, {\n  [themeActions.toggleTheme]: toggleTheme,\n})\n\nconst isChecked = createReducer({ isChecked: false }, {\n  [themeActions.toggleTheme]: toggleChecked,\n})\n\nexport default combineReducers({\n  themeConfig,\n  isChecked,\n});\n","import contactsReducer from './contacts/contactsReducer';\nimport themeReducer from './theme/themeReducer';\n\nconst rootModule = {\n  contacts: contactsReducer,\n  theme: themeReducer,\n};\n\nexport default rootModule;","import { configureStore } from '@reduxjs/toolkit';\nimport rootModule from './rootModule';\n\nimport { loadState, saveState } from \"../utils/storage\";\n\nconst store = configureStore({\n  reducer: rootModule,\n  preloadedState: loadState(),\n});\n\n\n// store.subscribe(() => saveState(store.getState()));\nstore.subscribe(() => saveState({ theme: store.getState().theme }));\n\nexport default store;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nconst getItems = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = state => {\n  const items = getItems(state);\n  const filter = getFilter(state).toLowerCase();\n\n  return items.filter(({ name }) => name.toLowerCase().includes(filter));\n}\n\nconst getVC = createSelector([getItems, getFilter], (items, filter) => {\n  return items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n})\n\nconst getItemById = createSelector(\n  [(state, contactId) => contactId, getItems],\n  (contactId, items) => items.find(item => item.id === contactId));\n\n\nexport default {\n  getItems,\n  getVisibleContacts,\n  getVC,\n  getItemById,\n}","\nconst getThemeConfig = state => state.theme.themeConfig;\nconst getIsChecked = state => state.theme.isChecked;\n\nexport default {\n  getThemeConfig,\n  getIsChecked,\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\n// redux\nimport { connect } from \"react-redux\";\nimport themeSelector from '../../../modules/theme/themeSelector';\n\n// styles\nimport styles from \"./Layout.module.scss\";\n\nfunction Layout(props) {\n  const { children, isChecked } = props;\n\n  return (\n    <div\n      className={`${styles.container} ${\n        isChecked.isChecked ? styles.dark : styles.light\n        }`}\n    >\n      {children}\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.node,\n  isChecked: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    theme: themeSelector.getThemeConfig(state),\n    isChecked: themeSelector.getIsChecked(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","import React from \"react\";\nimport { string, node } from \"prop-types\";\n\nimport styles from \"./Section.module.scss\";\n\nfunction Section({ title, children }) {\n\n  return (\n    <section className={styles.section} >\n      {title && <h1 className={styles.title}>{title}</h1>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: string.isRequired,\n  children: node,\n};\n\nexport default Section;","import React, { Component } from 'react';\nimport { func } from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styles from './ContactForm.module.scss';\nclass ContactForm extends Component {\n\n  static propTypes = {\n    onAddContact: func.isRequired,\n  };\n  static defaulProps = {};\n\n  state = {\n    name: '',\n    number: '',\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (!name || !number) { return toast.error('Please fill the form!') }\n    else if (name.length < 3) { toast.error('Name should be more then 3 letters') }\n    else if (contacts.some(contact => contact.name === name)) { toast.info(name + ` is alredy in contacts`) }\n    else { this.props.onAddContact(name, number); }\n\n    this.setState({ name: '', number: '' });\n  }\n\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.name}>Name\n          <input type=\"text\" name=\"name\" className={styles.input} value={name} onChange={this.handleChange} />\n        </label>\n        <label className={styles.name}>Number\n          <input type=\"text\" name=\"number\" className={styles.input} value={number} onChange={this.handleChange} />\n        </label>\n        <button type=\"submit\" className={styles.button} >Add contact</button>\n      </form>\n    );\n  }\n}\n\n\nconst mapState = (state) => {\n  const contacts = contactsSelectors.getItems(state);\n  return { contacts }\n}\n\nexport default connect(mapState, null)(ContactForm);\n\n\n","//redux\nimport { connect } from \"react-redux\";\n\nimport ContactForm from \"./ContactForm\";\n\nimport contactsActions from \"../../modules/contacts/contactsActions\";\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\n\n\nconst mapStateToProps = (state) => {\n  const contacts = contactsSelectors.getItems(state);\n  return { ...contacts }\n}\n\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.addContacts,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\n// styles\nimport styles from '../ContactList/ContactList.module.scss';\n\nconst ContactListItem = ({ name, number, onRemove }) => {\n  return (\n    <li> {name}: {number}\n      <section >\n        <button type=\"submit\" className={styles.button} onClick={onRemove}>Delete</button>\n      </section>\n    </li>\n  )\n};\n\nContactListItem.defaultProps = {};\n\nContactListItem.propTypes = {\n  name: string.isRequired,\n  number: string.isRequired,\n  onRemove: func.isRequired,\n};\n\nexport default ContactListItem;","// redux\nimport { connect } from \"react-redux\";\n\nimport ContactListItem from \"./ContactListItem\";\n\nimport contactsActions from \"../../modules/contacts/contactsActions\";\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\n\n\nconst mapState = (state, ownProps) => {\n  const contacts = contactsSelectors.getItemById(state, ownProps.id);\n  return { ...contacts }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemove: () => dispatch(contactsActions.removeContact(ownProps.id)),\n})\n\nexport default connect(mapState, mapDispatchToProps)(ContactListItem);\n","import React from 'react';\nimport { string, arrayOf, exact } from 'prop-types';\n\n\nimport ContactListItem from \"../ContactListItem/ContactListItem.Container\";\n// redux\nimport { connect } from \"react-redux\";\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\n\n\n// styles\nimport styles from '../ContactList/ContactList.module.scss';\n\nconst ContactList = ({ contacts }) => {\n\n\n  return (\n    <ul className={styles.contactList}>\n\n      {contacts.map(({ id }) =>\n        <ContactListItem key={id} id={id} />\n      )}\n\n    </ul>\n  )\n};\n\nContactList.defaultProps = {};\n\nContactList.propTypes = {\n  contacts: arrayOf(exact({\n    id: string.isRequired,\n    name: string.isRequired,\n    number: string.isRequired,\n  })).isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVC(state),\n})\n\n\nexport default connect(mapStateToProps)(ContactList);\n","import ContactList from './ContactList';\n\nexport default ContactList;","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../modules/contacts/contactsActions\";\n\nimport styles from '../Filter/Filter.module.scss';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <label className={styles.filter} >Find contacts by name\n    <input\n      type=\"text\"\n      name=\"filter\"\n      className={styles.input}\n      value={value}\n      onChange={(e) => onChangeFilter(e.target.value)} />\n  </label>\n)\n\nFilter.defaultProps = {};\n\nFilter.propTypes = {\n  value: string.isRequired,\n  onChangeFilter: func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Filter from './Filter';\n\nexport default Filter;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from 'react-redux';\nimport themeActions from '../../modules/theme/themeActions';\nimport themeSelector from '../../modules/theme/themeSelector';\n\n// styles\nimport styles from \"./ThemeToggler.module.css\";\n\nclass ThemeToggler extends Component {\n\n  static propTypes = {\n    theme: PropTypes.shape({\n      isChecked: PropTypes.object.isRequired,\n      onToggleTheme: PropTypes.func.isRequired,\n    })\n  }\n\n  render() {\n    const { onToggleTheme, isChecked } = this.props;\n\n    return (\n      <div>\n        <div className={styles.toolbar}>\n          <div className={styles.themeSwitch}>\n            <svg\n              aria-hidden=\"true\"\n              data-prefix=\"fas\"\n              data-icon=\"sun\"\n              role=\"img\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 512 512\"\n              className={styles.themeSwitch__icon}\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\n              ></path>\n            </svg>\n\n            <div className={styles.switch}>\n              <input\n                className={styles.switch__input}\n                type=\"checkbox\"\n                name=\"theme\"\n                id=\"theme-switch-control\"\n                checked={isChecked.isChecked}\n                onChange={onToggleTheme}\n\n              />\n              <label\n                aria-hidden=\"true\"\n                className={styles.switch__label}\n                htmlFor=\"theme-switch-control\"\n              >On</label >\n              <div aria-hidden=\"true\"\n                className={styles.switch__marker}\n              >\n              </div>\n            </div>\n\n            <svg\n              aria-hidden=\"true\"\n              data-prefix=\"fas\"\n              data-icon=\"moon\"\n              role=\"img\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 512 512\"\n              className={styles.themeSwitch__icon}\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\n              ></path>\n            </svg>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\n\nconst mapStateToprops = (state) => ({\n  isChecked: themeSelector.getIsChecked(state),\n});\n\n\nconst mapDispatchToprops = {\n  onToggleTheme: themeActions.toggleTheme,\n};\n\nexport default connect(mapStateToprops, mapDispatchToprops)(ThemeToggler);","// Core\nimport React from 'react';\n\n// Components\nimport Layout from './common/Layout';\nimport Section from './common/Section';\nimport ContactForm from './ContactForm/ContactFormContainer';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport ThemeToggler from './ThemeToggler';\n\n\n// utils\nimport { ToastContainer } from 'react-toastify';\n\n//styles\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = ({ contacts, visibleContacts, onIncrement, counterValue }) => {\n\n  return (\n    <Layout  >\n      <ThemeToggler />\n      <Section title={\"Phonebook\"}>\n        <ContactForm />\n      </Section>\n      <Section title={\"Contacts\"}>\n        {contacts.length > 1 && <Filter />}\n        {contacts.length > 0 && < ContactList />}\n        {!visibleContacts.length && <div>Not faund</div>}\n      </Section>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Layout >\n  );\n}\n\nexport default App;\n\n","import React, { Component } from 'react'\n\nimport { connect } from \"react-redux\";\nimport contactsSelectors from \"../modules/contacts/contactsSelectors\";\n\nimport App from \"./App\";\n\nclass AppContainer extends Component {\n\n  render() {\n    return (\n      <App {...this.props} {...this.state} >\n        {this.props.children}\n      </App>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getItems(state),\n  visibleContacts: contactsSelectors.getVC(state),\n})\n\nexport default connect(mapStateToProps)(AppContainer);\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './modules/store';\n\nimport './sass/base.scss';\n\nimport App from './components/AppContainer';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSwitch\":\"ThemeToggler_themeSwitch__2fidy\",\"themeSwitch__icon\":\"ThemeToggler_themeSwitch__icon__17Wg0\",\"switch\":\"ThemeToggler_switch__27gJ5\",\"switch__input\":\"ThemeToggler_switch__input__VkOIZ\",\"switch__label\":\"ThemeToggler_switch__label__2a-lS\",\"switch__marker\":\"ThemeToggler_switch__marker__1sYL3\",\"toolbar\":\"ThemeToggler_toolbar__1gGu9\"};"],"sourceRoot":""}